{"ast":null,"code":"var _jsxFileName = \"/home/user/github/palladas/palladas/epigrams_project/frontend/src/components/Game.js\";\n// src/components/Game.js\nimport Phaser from 'phaser';\nimport React, { useEffect } from 'react';\nconst Game = () => {\n  useEffect(() => {\n    const config = {\n      type: Phaser.AUTO,\n      width: 800,\n      height: 600,\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: {\n            y: 0\n          }\n        }\n      },\n      scene: {\n        preload: preload,\n        create: create,\n        update: update\n      }\n    };\n    const game = new Phaser.Game(config);\n    function preload() {\n      this.load.image('tiles', '/assets/tileset.png');\n      this.load.tilemapTiledJSON('map', '/assets/map.json');\n      this.load.spritesheet('player', '/assets/player.png', {\n        frameWidth: 32,\n        frameHeight: 32\n      });\n    }\n    function create() {\n      const map = this.make.tilemap({\n        key: 'map'\n      });\n      const tileset = map.addTilesetImage('tileset', 'tiles');\n      map.createLayer('Ground', tileset, 0, 0);\n      const player = this.physics.add.sprite(100, 100, 'player');\n      this.physics.add.collider(player, map.getLayer('Ground').tilemapLayer);\n      this.cursors = this.input.keyboard.createCursorKeys();\n      this.player = player;\n    }\n    function update() {\n      if (this.cursors.left.isDown) {\n        this.player.setVelocityX(-160);\n      } else if (this.cursors.right.isDown) {\n        this.player.setVelocityX(160);\n      } else {\n        this.player.setVelocityX(0);\n      }\n      if (this.cursors.up.isDown) {\n        this.player.setVelocityY(-160);\n      } else if (this.cursors.down.isDown) {\n        this.player.setVelocityY(160);\n      } else {\n        this.player.setVelocityY(0);\n      }\n    }\n    return () => {\n      game.destroy(true);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"game-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  });\n};\nexport default Game;","map":{"version":3,"names":["Phaser","React","useEffect","Game","config","type","AUTO","width","height","physics","default","arcade","gravity","y","scene","preload","create","update","game","load","image","tilemapTiledJSON","spritesheet","frameWidth","frameHeight","map","make","tilemap","key","tileset","addTilesetImage","createLayer","player","add","sprite","collider","getLayer","tilemapLayer","cursors","input","keyboard","createCursorKeys","left","isDown","setVelocityX","right","up","setVelocityY","down","destroy","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/user/github/palladas/palladas/epigrams_project/frontend/src/components/Game.js"],"sourcesContent":["// src/components/Game.js\nimport Phaser from 'phaser';\nimport React, { useEffect } from 'react';\n\nconst Game = () => {\n  useEffect(() => {\n    const config = {\n      type: Phaser.AUTO,\n      width: 800,\n      height: 600,\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: { y: 0 }\n        }\n      },\n      scene: {\n        preload: preload,\n        create: create,\n        update: update\n      }\n    };\n\n    const game = new Phaser.Game(config);\n\n    function preload() {\n      this.load.image('tiles', '/assets/tileset.png');\n      this.load.tilemapTiledJSON('map', '/assets/map.json');\n      this.load.spritesheet('player', '/assets/player.png', { frameWidth: 32, frameHeight: 32 });\n    }\n\n    function create() {\n      const map = this.make.tilemap({ key: 'map' });\n      const tileset = map.addTilesetImage('tileset', 'tiles');\n      map.createLayer('Ground', tileset, 0, 0);\n\n      const player = this.physics.add.sprite(100, 100, 'player');\n      this.physics.add.collider(player, map.getLayer('Ground').tilemapLayer);\n\n      this.cursors = this.input.keyboard.createCursorKeys();\n      this.player = player;\n    }\n\n    function update() {\n      if (this.cursors.left.isDown) {\n        this.player.setVelocityX(-160);\n      } else if (this.cursors.right.isDown) {\n        this.player.setVelocityX(160);\n      } else {\n        this.player.setVelocityX(0);\n      }\n\n      if (this.cursors.up.isDown) {\n        this.player.setVelocityY(-160);\n      } else if (this.cursors.down.isDown) {\n        this.player.setVelocityY(160);\n      } else {\n        this.player.setVelocityY(0);\n      }\n    }\n\n    return () => {\n      game.destroy(true);\n    };\n  }, []);\n\n  return <div id=\"game-container\"></div>;\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}